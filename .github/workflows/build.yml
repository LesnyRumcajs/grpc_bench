name: CI

on:
  push:
  pull_request:

env:
  GRPC_IMAGE_NAME: ghcr.io/${{ github.repository }}
  GRPC_BENCHMARK_DURATION: 30s

jobs:
  meta-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: ./generate_ci.sh | tee .github/workflows/build.yml
    - run: git --no-pager diff --exit-code

  cpp_asio_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_asio_grpc_bench
      run: ./build.sh cpp_asio_grpc_bench
    - name: Push tag cpp_asio_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-complex_proto $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-cpp_asio_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: cpp_asio_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag cpp_asio_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-complex_proto
    - name: Benchmark cpp_asio_grpc_bench
      run: ./bench.sh cpp_asio_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-complex_proto

  cpp_asio_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: cpp_asio_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_asio_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh cpp_asio_grpc_bench
    - name: Push tag cpp_asio_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_100B $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_100B
    - name: Benchmark cpp_asio_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh cpp_asio_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_100B

  cpp_asio_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: cpp_asio_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_asio_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh cpp_asio_grpc_bench
    - name: Push tag cpp_asio_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10B $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10B
    - name: Benchmark cpp_asio_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh cpp_asio_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10B

  cpp_asio_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: cpp_asio_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_asio_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh cpp_asio_grpc_bench
    - name: Push tag cpp_asio_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10kB $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10kB
    - name: Benchmark cpp_asio_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh cpp_asio_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_10kB

  cpp_asio_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: cpp_asio_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_asio_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh cpp_asio_grpc_bench
    - name: Push tag cpp_asio_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_1kB $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_1kB
    - name: Benchmark cpp_asio_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh cpp_asio_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-string_1kB

  cpp_grpc_mt-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_grpc_mt_bench
      run: ./build.sh cpp_grpc_mt_bench
    - name: Push tag cpp_grpc_mt_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-complex_proto $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-complex_proto-$GITHUB_REF_NAME

  bench-cpp_grpc_mt-complex_proto:
    runs-on: ubuntu-latest
    needs: cpp_grpc_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag cpp_grpc_mt_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-complex_proto
    - name: Benchmark cpp_grpc_mt_bench
      run: ./bench.sh cpp_grpc_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-complex_proto

  cpp_grpc_mt-string_100B:
    runs-on: ubuntu-latest
    needs: cpp_grpc_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_grpc_mt_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh cpp_grpc_mt_bench
    - name: Push tag cpp_grpc_mt_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_100B $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_100B
    - name: Benchmark cpp_grpc_mt_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh cpp_grpc_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_100B

  cpp_grpc_mt-string_10B:
    runs-on: ubuntu-latest
    needs: cpp_grpc_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_grpc_mt_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh cpp_grpc_mt_bench
    - name: Push tag cpp_grpc_mt_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10B $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10B
    - name: Benchmark cpp_grpc_mt_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh cpp_grpc_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10B

  cpp_grpc_mt-string_10kB:
    runs-on: ubuntu-latest
    needs: cpp_grpc_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_grpc_mt_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh cpp_grpc_mt_bench
    - name: Push tag cpp_grpc_mt_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10kB $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10kB
    - name: Benchmark cpp_grpc_mt_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh cpp_grpc_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_10kB

  cpp_grpc_mt-string_1kB:
    runs-on: ubuntu-latest
    needs: cpp_grpc_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_grpc_mt_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh cpp_grpc_mt_bench
    - name: Push tag cpp_grpc_mt_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_1kB $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_1kB
    - name: Benchmark cpp_grpc_mt_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh cpp_grpc_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-string_1kB

  cpp_grpc_st-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_grpc_st_bench
      run: ./build.sh cpp_grpc_st_bench
    - name: Push tag cpp_grpc_st_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_st_bench-complex_proto $GRPC_IMAGE_NAME:cpp_grpc_st_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-complex_proto-$GITHUB_REF_NAME

  bench-cpp_grpc_st-complex_proto:
    runs-on: ubuntu-latest
    needs: cpp_grpc_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag cpp_grpc_st_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:cpp_grpc_st_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_st_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_grpc_st_bench-complex_proto
    - name: Benchmark cpp_grpc_st_bench
      run: ./bench.sh cpp_grpc_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-complex_proto

  cpp_grpc_st-string_100B:
    runs-on: ubuntu-latest
    needs: cpp_grpc_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_grpc_st_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh cpp_grpc_st_bench
    - name: Push tag cpp_grpc_st_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_100B $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_100B
    - name: Benchmark cpp_grpc_st_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh cpp_grpc_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_100B

  cpp_grpc_st-string_10B:
    runs-on: ubuntu-latest
    needs: cpp_grpc_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_grpc_st_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh cpp_grpc_st_bench
    - name: Push tag cpp_grpc_st_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10B $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10B
    - name: Benchmark cpp_grpc_st_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh cpp_grpc_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10B

  cpp_grpc_st-string_10kB:
    runs-on: ubuntu-latest
    needs: cpp_grpc_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_grpc_st_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh cpp_grpc_st_bench
    - name: Push tag cpp_grpc_st_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10kB $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10kB
    - name: Benchmark cpp_grpc_st_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh cpp_grpc_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_10kB

  cpp_grpc_st-string_1kB:
    runs-on: ubuntu-latest
    needs: cpp_grpc_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build cpp_grpc_st_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh cpp_grpc_st_bench
    - name: Push tag cpp_grpc_st_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_1kB $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_1kB
    - name: Benchmark cpp_grpc_st_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh cpp_grpc_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-string_1kB

  crystal_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build crystal_grpc_bench
      run: ./build.sh crystal_grpc_bench
    - name: Push tag crystal_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:crystal_grpc_bench-complex_proto $GRPC_IMAGE_NAME:crystal_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-crystal_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: crystal_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag crystal_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:crystal_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:crystal_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:crystal_grpc_bench-complex_proto
    - name: Benchmark crystal_grpc_bench
      run: ./bench.sh crystal_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-complex_proto

  crystal_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: crystal_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build crystal_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh crystal_grpc_bench
    - name: Push tag crystal_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:crystal_grpc_bench-string_100B $GRPC_IMAGE_NAME:crystal_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:crystal_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:crystal_grpc_bench-string_100B
    - name: Benchmark crystal_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh crystal_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-string_100B

  crystal_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: crystal_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build crystal_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh crystal_grpc_bench
    - name: Push tag crystal_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10B $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10B
    - name: Benchmark crystal_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh crystal_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10B

  crystal_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: crystal_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build crystal_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh crystal_grpc_bench
    - name: Push tag crystal_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10kB $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10kB
    - name: Benchmark crystal_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh crystal_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-string_10kB

  crystal_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: crystal_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build crystal_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh crystal_grpc_bench
    - name: Push tag crystal_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:crystal_grpc_bench-string_1kB $GRPC_IMAGE_NAME:crystal_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:crystal_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:crystal_grpc_bench-string_1kB
    - name: Benchmark crystal_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh crystal_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-string_1kB

  csharp_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build csharp_grpc_bench
      run: ./build.sh csharp_grpc_bench
    - name: Push tag csharp_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:csharp_grpc_bench-complex_proto $GRPC_IMAGE_NAME:csharp_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-csharp_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: csharp_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag csharp_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:csharp_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:csharp_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:csharp_grpc_bench-complex_proto
    - name: Benchmark csharp_grpc_bench
      run: ./bench.sh csharp_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-complex_proto

  csharp_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: csharp_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build csharp_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh csharp_grpc_bench
    - name: Push tag csharp_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:csharp_grpc_bench-string_100B $GRPC_IMAGE_NAME:csharp_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:csharp_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:csharp_grpc_bench-string_100B
    - name: Benchmark csharp_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh csharp_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-string_100B

  csharp_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: csharp_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build csharp_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh csharp_grpc_bench
    - name: Push tag csharp_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10B $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10B
    - name: Benchmark csharp_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh csharp_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10B

  csharp_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: csharp_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build csharp_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh csharp_grpc_bench
    - name: Push tag csharp_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10kB $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10kB
    - name: Benchmark csharp_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh csharp_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-string_10kB

  csharp_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: csharp_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build csharp_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh csharp_grpc_bench
    - name: Push tag csharp_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:csharp_grpc_bench-string_1kB $GRPC_IMAGE_NAME:csharp_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:csharp_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:csharp_grpc_bench-string_1kB
    - name: Benchmark csharp_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh csharp_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-string_1kB

  dotnet_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build dotnet_grpc_bench
      run: ./build.sh dotnet_grpc_bench
    - name: Push tag dotnet_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:dotnet_grpc_bench-complex_proto $GRPC_IMAGE_NAME:dotnet_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-dotnet_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: dotnet_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag dotnet_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:dotnet_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:dotnet_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:dotnet_grpc_bench-complex_proto
    - name: Benchmark dotnet_grpc_bench
      run: ./bench.sh dotnet_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-complex_proto

  dotnet_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: dotnet_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build dotnet_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh dotnet_grpc_bench
    - name: Push tag dotnet_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_100B $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_100B
    - name: Benchmark dotnet_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh dotnet_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_100B

  dotnet_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: dotnet_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build dotnet_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh dotnet_grpc_bench
    - name: Push tag dotnet_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10B $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10B
    - name: Benchmark dotnet_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh dotnet_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10B

  dotnet_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: dotnet_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build dotnet_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh dotnet_grpc_bench
    - name: Push tag dotnet_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10kB $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10kB
    - name: Benchmark dotnet_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh dotnet_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_10kB

  dotnet_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: dotnet_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build dotnet_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh dotnet_grpc_bench
    - name: Push tag dotnet_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_1kB $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_1kB
    - name: Benchmark dotnet_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh dotnet_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-string_1kB

  elixir_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build elixir_grpc_bench
      run: ./build.sh elixir_grpc_bench
    - name: Push tag elixir_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:elixir_grpc_bench-complex_proto $GRPC_IMAGE_NAME:elixir_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-elixir_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: elixir_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag elixir_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:elixir_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:elixir_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:elixir_grpc_bench-complex_proto
    - name: Benchmark elixir_grpc_bench
      run: ./bench.sh elixir_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-complex_proto

  elixir_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: elixir_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build elixir_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh elixir_grpc_bench
    - name: Push tag elixir_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:elixir_grpc_bench-string_100B $GRPC_IMAGE_NAME:elixir_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:elixir_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:elixir_grpc_bench-string_100B
    - name: Benchmark elixir_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh elixir_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-string_100B

  elixir_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: elixir_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build elixir_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh elixir_grpc_bench
    - name: Push tag elixir_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10B $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10B
    - name: Benchmark elixir_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh elixir_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10B

  elixir_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: elixir_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build elixir_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh elixir_grpc_bench
    - name: Push tag elixir_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10kB $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10kB
    - name: Benchmark elixir_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh elixir_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-string_10kB

  elixir_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: elixir_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build elixir_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh elixir_grpc_bench
    - name: Push tag elixir_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:elixir_grpc_bench-string_1kB $GRPC_IMAGE_NAME:elixir_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:elixir_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:elixir_grpc_bench-string_1kB
    - name: Benchmark elixir_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh elixir_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-string_1kB

  erlang_grpcbox-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build erlang_grpcbox_bench
      run: ./build.sh erlang_grpcbox_bench
    - name: Push tag erlang_grpcbox_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:erlang_grpcbox_bench-complex_proto $GRPC_IMAGE_NAME:erlang_grpcbox_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-complex_proto-$GITHUB_REF_NAME

  bench-erlang_grpcbox-complex_proto:
    runs-on: ubuntu-latest
    needs: erlang_grpcbox-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag erlang_grpcbox_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:erlang_grpcbox_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:erlang_grpcbox_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:erlang_grpcbox_bench-complex_proto
    - name: Benchmark erlang_grpcbox_bench
      run: ./bench.sh erlang_grpcbox_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-complex_proto

  erlang_grpcbox-string_100B:
    runs-on: ubuntu-latest
    needs: erlang_grpcbox-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build erlang_grpcbox_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh erlang_grpcbox_bench
    - name: Push tag erlang_grpcbox_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_100B $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_100B
    - name: Benchmark erlang_grpcbox_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh erlang_grpcbox_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_100B

  erlang_grpcbox-string_10B:
    runs-on: ubuntu-latest
    needs: erlang_grpcbox-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build erlang_grpcbox_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh erlang_grpcbox_bench
    - name: Push tag erlang_grpcbox_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10B $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10B
    - name: Benchmark erlang_grpcbox_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh erlang_grpcbox_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10B

  erlang_grpcbox-string_10kB:
    runs-on: ubuntu-latest
    needs: erlang_grpcbox-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build erlang_grpcbox_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh erlang_grpcbox_bench
    - name: Push tag erlang_grpcbox_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10kB $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10kB
    - name: Benchmark erlang_grpcbox_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh erlang_grpcbox_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_10kB

  erlang_grpcbox-string_1kB:
    runs-on: ubuntu-latest
    needs: erlang_grpcbox-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build erlang_grpcbox_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh erlang_grpcbox_bench
    - name: Push tag erlang_grpcbox_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_1kB $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_1kB
    - name: Benchmark erlang_grpcbox_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh erlang_grpcbox_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-string_1kB

  go_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build go_grpc_bench
      run: ./build.sh go_grpc_bench
    - name: Push tag go_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:go_grpc_bench-complex_proto $GRPC_IMAGE_NAME:go_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:go_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-go_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: go_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag go_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:go_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:go_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:go_grpc_bench-complex_proto
    - name: Benchmark go_grpc_bench
      run: ./bench.sh go_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:go_grpc_bench-complex_proto

  go_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: go_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build go_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh go_grpc_bench
    - name: Push tag go_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:go_grpc_bench-string_100B $GRPC_IMAGE_NAME:go_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:go_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:go_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:go_grpc_bench-string_100B
    - name: Benchmark go_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh go_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:go_grpc_bench-string_100B

  go_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: go_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build go_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh go_grpc_bench
    - name: Push tag go_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:go_grpc_bench-string_10B $GRPC_IMAGE_NAME:go_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:go_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:go_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:go_grpc_bench-string_10B
    - name: Benchmark go_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh go_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:go_grpc_bench-string_10B

  go_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: go_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build go_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh go_grpc_bench
    - name: Push tag go_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:go_grpc_bench-string_10kB $GRPC_IMAGE_NAME:go_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:go_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:go_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:go_grpc_bench-string_10kB
    - name: Benchmark go_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh go_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:go_grpc_bench-string_10kB

  go_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: go_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build go_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh go_grpc_bench
    - name: Push tag go_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:go_grpc_bench-string_1kB $GRPC_IMAGE_NAME:go_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:go_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:go_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:go_grpc_bench-string_1kB
    - name: Benchmark go_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh go_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:go_grpc_bench-string_1kB

  java_aot-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_aot_bench
      run: ./build.sh java_aot_bench
    - name: Push tag java_aot_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_aot_bench-complex_proto $GRPC_IMAGE_NAME:java_aot_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_aot_bench-complex_proto-$GITHUB_REF_NAME

  bench-java_aot-complex_proto:
    runs-on: ubuntu-latest
    needs: java_aot-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag java_aot_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:java_aot_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_aot_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_aot_bench-complex_proto
    - name: Benchmark java_aot_bench
      run: ./bench.sh java_aot_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_aot_bench-complex_proto

  java_aot-string_100B:
    runs-on: ubuntu-latest
    needs: java_aot-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_aot_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh java_aot_bench
    - name: Push tag java_aot_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_aot_bench-string_100B $GRPC_IMAGE_NAME:java_aot_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_aot_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_aot_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_aot_bench-string_100B
    - name: Benchmark java_aot_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh java_aot_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_aot_bench-string_100B

  java_aot-string_10B:
    runs-on: ubuntu-latest
    needs: java_aot-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_aot_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh java_aot_bench
    - name: Push tag java_aot_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_aot_bench-string_10B $GRPC_IMAGE_NAME:java_aot_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_aot_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_aot_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_aot_bench-string_10B
    - name: Benchmark java_aot_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh java_aot_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_aot_bench-string_10B

  java_aot-string_10kB:
    runs-on: ubuntu-latest
    needs: java_aot-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_aot_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh java_aot_bench
    - name: Push tag java_aot_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_aot_bench-string_10kB $GRPC_IMAGE_NAME:java_aot_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_aot_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_aot_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_aot_bench-string_10kB
    - name: Benchmark java_aot_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh java_aot_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_aot_bench-string_10kB

  java_aot-string_1kB:
    runs-on: ubuntu-latest
    needs: java_aot-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_aot_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh java_aot_bench
    - name: Push tag java_aot_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_aot_bench-string_1kB $GRPC_IMAGE_NAME:java_aot_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_aot_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_aot_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_aot_bench-string_1kB
    - name: Benchmark java_aot_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh java_aot_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_aot_bench-string_1kB

  java_hotspot_grpc_g1gc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_g1gc_bench
      run: ./build.sh java_hotspot_grpc_g1gc_bench
    - name: Push tag java_hotspot_grpc_g1gc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-complex_proto $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-complex_proto-$GITHUB_REF_NAME

  bench-java_hotspot_grpc_g1gc-complex_proto:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_g1gc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag java_hotspot_grpc_g1gc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-complex_proto
    - name: Benchmark java_hotspot_grpc_g1gc_bench
      run: ./bench.sh java_hotspot_grpc_g1gc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-complex_proto

  java_hotspot_grpc_g1gc-string_100B:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_g1gc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_g1gc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh java_hotspot_grpc_g1gc_bench
    - name: Push tag java_hotspot_grpc_g1gc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_100B $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_100B
    - name: Benchmark java_hotspot_grpc_g1gc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh java_hotspot_grpc_g1gc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_100B

  java_hotspot_grpc_g1gc-string_10B:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_g1gc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_g1gc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh java_hotspot_grpc_g1gc_bench
    - name: Push tag java_hotspot_grpc_g1gc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10B $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10B
    - name: Benchmark java_hotspot_grpc_g1gc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh java_hotspot_grpc_g1gc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10B

  java_hotspot_grpc_g1gc-string_10kB:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_g1gc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_g1gc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh java_hotspot_grpc_g1gc_bench
    - name: Push tag java_hotspot_grpc_g1gc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10kB $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10kB
    - name: Benchmark java_hotspot_grpc_g1gc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh java_hotspot_grpc_g1gc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_10kB

  java_hotspot_grpc_g1gc-string_1kB:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_g1gc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_g1gc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh java_hotspot_grpc_g1gc_bench
    - name: Push tag java_hotspot_grpc_g1gc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_1kB $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_1kB
    - name: Benchmark java_hotspot_grpc_g1gc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh java_hotspot_grpc_g1gc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-string_1kB

  java_hotspot_grpc_pgc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_pgc_bench
      run: ./build.sh java_hotspot_grpc_pgc_bench
    - name: Push tag java_hotspot_grpc_pgc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-complex_proto $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-complex_proto-$GITHUB_REF_NAME

  bench-java_hotspot_grpc_pgc-complex_proto:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_pgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag java_hotspot_grpc_pgc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-complex_proto
    - name: Benchmark java_hotspot_grpc_pgc_bench
      run: ./bench.sh java_hotspot_grpc_pgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-complex_proto

  java_hotspot_grpc_pgc-string_100B:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_pgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_pgc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh java_hotspot_grpc_pgc_bench
    - name: Push tag java_hotspot_grpc_pgc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_100B $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_100B
    - name: Benchmark java_hotspot_grpc_pgc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh java_hotspot_grpc_pgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_100B

  java_hotspot_grpc_pgc-string_10B:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_pgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_pgc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh java_hotspot_grpc_pgc_bench
    - name: Push tag java_hotspot_grpc_pgc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10B $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10B
    - name: Benchmark java_hotspot_grpc_pgc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh java_hotspot_grpc_pgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10B

  java_hotspot_grpc_pgc-string_10kB:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_pgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_pgc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh java_hotspot_grpc_pgc_bench
    - name: Push tag java_hotspot_grpc_pgc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10kB $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10kB
    - name: Benchmark java_hotspot_grpc_pgc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh java_hotspot_grpc_pgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_10kB

  java_hotspot_grpc_pgc-string_1kB:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_pgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_pgc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh java_hotspot_grpc_pgc_bench
    - name: Push tag java_hotspot_grpc_pgc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_1kB $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_1kB
    - name: Benchmark java_hotspot_grpc_pgc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh java_hotspot_grpc_pgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-string_1kB

  java_hotspot_grpc_sgc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_sgc_bench
      run: ./build.sh java_hotspot_grpc_sgc_bench
    - name: Push tag java_hotspot_grpc_sgc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-complex_proto $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-complex_proto-$GITHUB_REF_NAME

  bench-java_hotspot_grpc_sgc-complex_proto:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_sgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag java_hotspot_grpc_sgc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-complex_proto
    - name: Benchmark java_hotspot_grpc_sgc_bench
      run: ./bench.sh java_hotspot_grpc_sgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-complex_proto

  java_hotspot_grpc_sgc-string_100B:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_sgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_sgc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh java_hotspot_grpc_sgc_bench
    - name: Push tag java_hotspot_grpc_sgc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_100B $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_100B
    - name: Benchmark java_hotspot_grpc_sgc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh java_hotspot_grpc_sgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_100B

  java_hotspot_grpc_sgc-string_10B:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_sgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_sgc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh java_hotspot_grpc_sgc_bench
    - name: Push tag java_hotspot_grpc_sgc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10B $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10B
    - name: Benchmark java_hotspot_grpc_sgc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh java_hotspot_grpc_sgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10B

  java_hotspot_grpc_sgc-string_10kB:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_sgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_sgc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh java_hotspot_grpc_sgc_bench
    - name: Push tag java_hotspot_grpc_sgc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10kB $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10kB
    - name: Benchmark java_hotspot_grpc_sgc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh java_hotspot_grpc_sgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_10kB

  java_hotspot_grpc_sgc-string_1kB:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_sgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_sgc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh java_hotspot_grpc_sgc_bench
    - name: Push tag java_hotspot_grpc_sgc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_1kB $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_1kB
    - name: Benchmark java_hotspot_grpc_sgc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh java_hotspot_grpc_sgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-string_1kB

  java_hotspot_grpc_she-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_she_bench
      run: ./build.sh java_hotspot_grpc_she_bench
    - name: Push tag java_hotspot_grpc_she_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-complex_proto $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-complex_proto-$GITHUB_REF_NAME

  bench-java_hotspot_grpc_she-complex_proto:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_she-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag java_hotspot_grpc_she_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-complex_proto
    - name: Benchmark java_hotspot_grpc_she_bench
      run: ./bench.sh java_hotspot_grpc_she_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-complex_proto

  java_hotspot_grpc_she-string_100B:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_she-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_she_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh java_hotspot_grpc_she_bench
    - name: Push tag java_hotspot_grpc_she_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_100B $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_100B
    - name: Benchmark java_hotspot_grpc_she_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh java_hotspot_grpc_she_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_100B

  java_hotspot_grpc_she-string_10B:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_she-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_she_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh java_hotspot_grpc_she_bench
    - name: Push tag java_hotspot_grpc_she_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10B $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10B
    - name: Benchmark java_hotspot_grpc_she_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh java_hotspot_grpc_she_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10B

  java_hotspot_grpc_she-string_10kB:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_she-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_she_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh java_hotspot_grpc_she_bench
    - name: Push tag java_hotspot_grpc_she_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10kB $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10kB
    - name: Benchmark java_hotspot_grpc_she_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh java_hotspot_grpc_she_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_10kB

  java_hotspot_grpc_she-string_1kB:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_she-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_she_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh java_hotspot_grpc_she_bench
    - name: Push tag java_hotspot_grpc_she_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_1kB $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_1kB
    - name: Benchmark java_hotspot_grpc_she_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh java_hotspot_grpc_she_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-string_1kB

  java_hotspot_grpc_zgc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_zgc_bench
      run: ./build.sh java_hotspot_grpc_zgc_bench
    - name: Push tag java_hotspot_grpc_zgc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-complex_proto $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-complex_proto-$GITHUB_REF_NAME

  bench-java_hotspot_grpc_zgc-complex_proto:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_zgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag java_hotspot_grpc_zgc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-complex_proto
    - name: Benchmark java_hotspot_grpc_zgc_bench
      run: ./bench.sh java_hotspot_grpc_zgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-complex_proto

  java_hotspot_grpc_zgc-string_100B:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_zgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_zgc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh java_hotspot_grpc_zgc_bench
    - name: Push tag java_hotspot_grpc_zgc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_100B $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_100B
    - name: Benchmark java_hotspot_grpc_zgc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh java_hotspot_grpc_zgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_100B

  java_hotspot_grpc_zgc-string_10B:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_zgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_zgc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh java_hotspot_grpc_zgc_bench
    - name: Push tag java_hotspot_grpc_zgc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10B $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10B
    - name: Benchmark java_hotspot_grpc_zgc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh java_hotspot_grpc_zgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10B

  java_hotspot_grpc_zgc-string_10kB:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_zgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_zgc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh java_hotspot_grpc_zgc_bench
    - name: Push tag java_hotspot_grpc_zgc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10kB $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10kB
    - name: Benchmark java_hotspot_grpc_zgc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh java_hotspot_grpc_zgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_10kB

  java_hotspot_grpc_zgc-string_1kB:
    runs-on: ubuntu-latest
    needs: java_hotspot_grpc_zgc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_hotspot_grpc_zgc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh java_hotspot_grpc_zgc_bench
    - name: Push tag java_hotspot_grpc_zgc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_1kB $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_1kB
    - name: Benchmark java_hotspot_grpc_zgc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh java_hotspot_grpc_zgc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-string_1kB

  java_micronaut-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_micronaut_bench
      run: ./build.sh java_micronaut_bench
    - name: Push tag java_micronaut_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_bench-complex_proto $GRPC_IMAGE_NAME:java_micronaut_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_micronaut_bench-complex_proto-$GITHUB_REF_NAME

  bench-java_micronaut-complex_proto:
    runs-on: ubuntu-latest
    needs: java_micronaut-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag java_micronaut_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:java_micronaut_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_micronaut_bench-complex_proto
    - name: Benchmark java_micronaut_bench
      run: ./bench.sh java_micronaut_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_bench-complex_proto

  java_micronaut-string_100B:
    runs-on: ubuntu-latest
    needs: java_micronaut-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_micronaut_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh java_micronaut_bench
    - name: Push tag java_micronaut_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_bench-string_100B $GRPC_IMAGE_NAME:java_micronaut_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_micronaut_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_micronaut_bench-string_100B
    - name: Benchmark java_micronaut_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh java_micronaut_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_bench-string_100B

  java_micronaut-string_10B:
    runs-on: ubuntu-latest
    needs: java_micronaut-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_micronaut_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh java_micronaut_bench
    - name: Push tag java_micronaut_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_bench-string_10B $GRPC_IMAGE_NAME:java_micronaut_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_micronaut_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_micronaut_bench-string_10B
    - name: Benchmark java_micronaut_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh java_micronaut_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_bench-string_10B

  java_micronaut-string_10kB:
    runs-on: ubuntu-latest
    needs: java_micronaut-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_micronaut_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh java_micronaut_bench
    - name: Push tag java_micronaut_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_bench-string_10kB $GRPC_IMAGE_NAME:java_micronaut_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_micronaut_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_micronaut_bench-string_10kB
    - name: Benchmark java_micronaut_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh java_micronaut_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_bench-string_10kB

  java_micronaut-string_1kB:
    runs-on: ubuntu-latest
    needs: java_micronaut-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_micronaut_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh java_micronaut_bench
    - name: Push tag java_micronaut_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_bench-string_1kB $GRPC_IMAGE_NAME:java_micronaut_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_micronaut_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_micronaut_bench-string_1kB
    - name: Benchmark java_micronaut_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh java_micronaut_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_bench-string_1kB

  java_micronaut_workstealing-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_micronaut_workstealing_bench
      run: ./build.sh java_micronaut_workstealing_bench
    - name: Push tag java_micronaut_workstealing_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-complex_proto $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-complex_proto-$GITHUB_REF_NAME

  bench-java_micronaut_workstealing-complex_proto:
    runs-on: ubuntu-latest
    needs: java_micronaut_workstealing-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag java_micronaut_workstealing_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-complex_proto
    - name: Benchmark java_micronaut_workstealing_bench
      run: ./bench.sh java_micronaut_workstealing_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-complex_proto

  java_micronaut_workstealing-string_100B:
    runs-on: ubuntu-latest
    needs: java_micronaut_workstealing-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_micronaut_workstealing_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh java_micronaut_workstealing_bench
    - name: Push tag java_micronaut_workstealing_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_100B $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_100B
    - name: Benchmark java_micronaut_workstealing_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh java_micronaut_workstealing_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_100B

  java_micronaut_workstealing-string_10B:
    runs-on: ubuntu-latest
    needs: java_micronaut_workstealing-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_micronaut_workstealing_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh java_micronaut_workstealing_bench
    - name: Push tag java_micronaut_workstealing_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10B $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10B
    - name: Benchmark java_micronaut_workstealing_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh java_micronaut_workstealing_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10B

  java_micronaut_workstealing-string_10kB:
    runs-on: ubuntu-latest
    needs: java_micronaut_workstealing-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_micronaut_workstealing_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh java_micronaut_workstealing_bench
    - name: Push tag java_micronaut_workstealing_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10kB $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10kB
    - name: Benchmark java_micronaut_workstealing_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh java_micronaut_workstealing_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_10kB

  java_micronaut_workstealing-string_1kB:
    runs-on: ubuntu-latest
    needs: java_micronaut_workstealing-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_micronaut_workstealing_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh java_micronaut_workstealing_bench
    - name: Push tag java_micronaut_workstealing_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_1kB $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_1kB
    - name: Benchmark java_micronaut_workstealing_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh java_micronaut_workstealing_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-string_1kB

  java_openj9_grpc_gencon-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_openj9_grpc_gencon_bench
      run: ./build.sh java_openj9_grpc_gencon_bench
    - name: Push tag java_openj9_grpc_gencon_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-complex_proto $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-complex_proto-$GITHUB_REF_NAME

  bench-java_openj9_grpc_gencon-complex_proto:
    runs-on: ubuntu-latest
    needs: java_openj9_grpc_gencon-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag java_openj9_grpc_gencon_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-complex_proto
    - name: Benchmark java_openj9_grpc_gencon_bench
      run: ./bench.sh java_openj9_grpc_gencon_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-complex_proto

  java_openj9_grpc_gencon-string_100B:
    runs-on: ubuntu-latest
    needs: java_openj9_grpc_gencon-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_openj9_grpc_gencon_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh java_openj9_grpc_gencon_bench
    - name: Push tag java_openj9_grpc_gencon_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_100B $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_100B
    - name: Benchmark java_openj9_grpc_gencon_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh java_openj9_grpc_gencon_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_100B

  java_openj9_grpc_gencon-string_10B:
    runs-on: ubuntu-latest
    needs: java_openj9_grpc_gencon-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_openj9_grpc_gencon_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh java_openj9_grpc_gencon_bench
    - name: Push tag java_openj9_grpc_gencon_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10B $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10B
    - name: Benchmark java_openj9_grpc_gencon_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh java_openj9_grpc_gencon_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10B

  java_openj9_grpc_gencon-string_10kB:
    runs-on: ubuntu-latest
    needs: java_openj9_grpc_gencon-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_openj9_grpc_gencon_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh java_openj9_grpc_gencon_bench
    - name: Push tag java_openj9_grpc_gencon_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10kB $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10kB
    - name: Benchmark java_openj9_grpc_gencon_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh java_openj9_grpc_gencon_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_10kB

  java_openj9_grpc_gencon-string_1kB:
    runs-on: ubuntu-latest
    needs: java_openj9_grpc_gencon-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_openj9_grpc_gencon_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh java_openj9_grpc_gencon_bench
    - name: Push tag java_openj9_grpc_gencon_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_1kB $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_1kB
    - name: Benchmark java_openj9_grpc_gencon_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh java_openj9_grpc_gencon_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-string_1kB

  java_quarkus-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_quarkus_bench
      run: ./build.sh java_quarkus_bench
    - name: Push tag java_quarkus_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_quarkus_bench-complex_proto $GRPC_IMAGE_NAME:java_quarkus_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_quarkus_bench-complex_proto-$GITHUB_REF_NAME

  bench-java_quarkus-complex_proto:
    runs-on: ubuntu-latest
    needs: java_quarkus-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag java_quarkus_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:java_quarkus_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_quarkus_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_quarkus_bench-complex_proto
    - name: Benchmark java_quarkus_bench
      run: ./bench.sh java_quarkus_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_quarkus_bench-complex_proto

  java_quarkus-string_100B:
    runs-on: ubuntu-latest
    needs: java_quarkus-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_quarkus_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh java_quarkus_bench
    - name: Push tag java_quarkus_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_quarkus_bench-string_100B $GRPC_IMAGE_NAME:java_quarkus_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_quarkus_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_quarkus_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_quarkus_bench-string_100B
    - name: Benchmark java_quarkus_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh java_quarkus_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_quarkus_bench-string_100B

  java_quarkus-string_10B:
    runs-on: ubuntu-latest
    needs: java_quarkus-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_quarkus_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh java_quarkus_bench
    - name: Push tag java_quarkus_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_quarkus_bench-string_10B $GRPC_IMAGE_NAME:java_quarkus_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_quarkus_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_quarkus_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_quarkus_bench-string_10B
    - name: Benchmark java_quarkus_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh java_quarkus_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_quarkus_bench-string_10B

  java_quarkus-string_10kB:
    runs-on: ubuntu-latest
    needs: java_quarkus-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_quarkus_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh java_quarkus_bench
    - name: Push tag java_quarkus_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_quarkus_bench-string_10kB $GRPC_IMAGE_NAME:java_quarkus_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_quarkus_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_quarkus_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_quarkus_bench-string_10kB
    - name: Benchmark java_quarkus_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh java_quarkus_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_quarkus_bench-string_10kB

  java_quarkus-string_1kB:
    runs-on: ubuntu-latest
    needs: java_quarkus-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build java_quarkus_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh java_quarkus_bench
    - name: Push tag java_quarkus_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:java_quarkus_bench-string_1kB $GRPC_IMAGE_NAME:java_quarkus_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:java_quarkus_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:java_quarkus_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:java_quarkus_bench-string_1kB
    - name: Benchmark java_quarkus_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh java_quarkus_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:java_quarkus_bench-string_1kB

  kotlin_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build kotlin_grpc_bench
      run: ./build.sh kotlin_grpc_bench
    - name: Push tag kotlin_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:kotlin_grpc_bench-complex_proto $GRPC_IMAGE_NAME:kotlin_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-kotlin_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: kotlin_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag kotlin_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:kotlin_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:kotlin_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:kotlin_grpc_bench-complex_proto
    - name: Benchmark kotlin_grpc_bench
      run: ./bench.sh kotlin_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-complex_proto

  kotlin_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: kotlin_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build kotlin_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh kotlin_grpc_bench
    - name: Push tag kotlin_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_100B $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_100B
    - name: Benchmark kotlin_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh kotlin_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_100B

  kotlin_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: kotlin_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build kotlin_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh kotlin_grpc_bench
    - name: Push tag kotlin_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10B $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10B
    - name: Benchmark kotlin_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh kotlin_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10B

  kotlin_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: kotlin_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build kotlin_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh kotlin_grpc_bench
    - name: Push tag kotlin_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10kB $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10kB
    - name: Benchmark kotlin_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh kotlin_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_10kB

  kotlin_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: kotlin_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build kotlin_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh kotlin_grpc_bench
    - name: Push tag kotlin_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_1kB $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_1kB
    - name: Benchmark kotlin_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh kotlin_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-string_1kB

  node_grpcjs_st-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build node_grpcjs_st_bench
      run: ./build.sh node_grpcjs_st_bench
    - name: Push tag node_grpcjs_st_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:node_grpcjs_st_bench-complex_proto $GRPC_IMAGE_NAME:node_grpcjs_st_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-complex_proto-$GITHUB_REF_NAME

  bench-node_grpcjs_st-complex_proto:
    runs-on: ubuntu-latest
    needs: node_grpcjs_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag node_grpcjs_st_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:node_grpcjs_st_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:node_grpcjs_st_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:node_grpcjs_st_bench-complex_proto
    - name: Benchmark node_grpcjs_st_bench
      run: ./bench.sh node_grpcjs_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-complex_proto

  node_grpcjs_st-string_100B:
    runs-on: ubuntu-latest
    needs: node_grpcjs_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build node_grpcjs_st_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh node_grpcjs_st_bench
    - name: Push tag node_grpcjs_st_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_100B $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_100B
    - name: Benchmark node_grpcjs_st_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh node_grpcjs_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_100B

  node_grpcjs_st-string_10B:
    runs-on: ubuntu-latest
    needs: node_grpcjs_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build node_grpcjs_st_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh node_grpcjs_st_bench
    - name: Push tag node_grpcjs_st_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10B $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10B
    - name: Benchmark node_grpcjs_st_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh node_grpcjs_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10B

  node_grpcjs_st-string_10kB:
    runs-on: ubuntu-latest
    needs: node_grpcjs_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build node_grpcjs_st_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh node_grpcjs_st_bench
    - name: Push tag node_grpcjs_st_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10kB $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10kB
    - name: Benchmark node_grpcjs_st_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh node_grpcjs_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_10kB

  node_grpcjs_st-string_1kB:
    runs-on: ubuntu-latest
    needs: node_grpcjs_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build node_grpcjs_st_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh node_grpcjs_st_bench
    - name: Push tag node_grpcjs_st_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_1kB $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_1kB
    - name: Benchmark node_grpcjs_st_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh node_grpcjs_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-string_1kB

  php_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build php_grpc_bench
      run: ./build.sh php_grpc_bench
    - name: Push tag php_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:php_grpc_bench-complex_proto $GRPC_IMAGE_NAME:php_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:php_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-php_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: php_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag php_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:php_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:php_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:php_grpc_bench-complex_proto
    - name: Benchmark php_grpc_bench
      run: ./bench.sh php_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:php_grpc_bench-complex_proto

  php_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: php_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build php_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh php_grpc_bench
    - name: Push tag php_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:php_grpc_bench-string_100B $GRPC_IMAGE_NAME:php_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:php_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:php_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:php_grpc_bench-string_100B
    - name: Benchmark php_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh php_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:php_grpc_bench-string_100B

  php_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: php_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build php_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh php_grpc_bench
    - name: Push tag php_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:php_grpc_bench-string_10B $GRPC_IMAGE_NAME:php_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:php_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:php_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:php_grpc_bench-string_10B
    - name: Benchmark php_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh php_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:php_grpc_bench-string_10B

  php_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: php_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build php_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh php_grpc_bench
    - name: Push tag php_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:php_grpc_bench-string_10kB $GRPC_IMAGE_NAME:php_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:php_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:php_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:php_grpc_bench-string_10kB
    - name: Benchmark php_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh php_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:php_grpc_bench-string_10kB

  php_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: php_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build php_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh php_grpc_bench
    - name: Push tag php_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:php_grpc_bench-string_1kB $GRPC_IMAGE_NAME:php_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:php_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:php_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:php_grpc_bench-string_1kB
    - name: Benchmark php_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh php_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:php_grpc_bench-string_1kB

  python_async_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build python_async_grpc_bench
      run: ./build.sh python_async_grpc_bench
    - name: Push tag python_async_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:python_async_grpc_bench-complex_proto $GRPC_IMAGE_NAME:python_async_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-python_async_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: python_async_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag python_async_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:python_async_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:python_async_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:python_async_grpc_bench-complex_proto
    - name: Benchmark python_async_grpc_bench
      run: ./bench.sh python_async_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-complex_proto

  python_async_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: python_async_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build python_async_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh python_async_grpc_bench
    - name: Push tag python_async_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:python_async_grpc_bench-string_100B $GRPC_IMAGE_NAME:python_async_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:python_async_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:python_async_grpc_bench-string_100B
    - name: Benchmark python_async_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh python_async_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-string_100B

  python_async_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: python_async_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build python_async_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh python_async_grpc_bench
    - name: Push tag python_async_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10B $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10B
    - name: Benchmark python_async_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh python_async_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10B

  python_async_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: python_async_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build python_async_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh python_async_grpc_bench
    - name: Push tag python_async_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10kB $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10kB
    - name: Benchmark python_async_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh python_async_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-string_10kB

  python_async_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: python_async_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build python_async_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh python_async_grpc_bench
    - name: Push tag python_async_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:python_async_grpc_bench-string_1kB $GRPC_IMAGE_NAME:python_async_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:python_async_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:python_async_grpc_bench-string_1kB
    - name: Benchmark python_async_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh python_async_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-string_1kB

  python_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build python_grpc_bench
      run: ./build.sh python_grpc_bench
    - name: Push tag python_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:python_grpc_bench-complex_proto $GRPC_IMAGE_NAME:python_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:python_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-python_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: python_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag python_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:python_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:python_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:python_grpc_bench-complex_proto
    - name: Benchmark python_grpc_bench
      run: ./bench.sh python_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:python_grpc_bench-complex_proto

  python_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: python_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build python_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh python_grpc_bench
    - name: Push tag python_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:python_grpc_bench-string_100B $GRPC_IMAGE_NAME:python_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:python_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:python_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:python_grpc_bench-string_100B
    - name: Benchmark python_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh python_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:python_grpc_bench-string_100B

  python_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: python_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build python_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh python_grpc_bench
    - name: Push tag python_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:python_grpc_bench-string_10B $GRPC_IMAGE_NAME:python_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:python_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:python_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:python_grpc_bench-string_10B
    - name: Benchmark python_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh python_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:python_grpc_bench-string_10B

  python_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: python_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build python_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh python_grpc_bench
    - name: Push tag python_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:python_grpc_bench-string_10kB $GRPC_IMAGE_NAME:python_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:python_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:python_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:python_grpc_bench-string_10kB
    - name: Benchmark python_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh python_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:python_grpc_bench-string_10kB

  python_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: python_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build python_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh python_grpc_bench
    - name: Push tag python_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:python_grpc_bench-string_1kB $GRPC_IMAGE_NAME:python_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:python_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:python_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:python_grpc_bench-string_1kB
    - name: Benchmark python_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh python_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:python_grpc_bench-string_1kB

  ruby_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build ruby_grpc_bench
      run: ./build.sh ruby_grpc_bench
    - name: Push tag ruby_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:ruby_grpc_bench-complex_proto $GRPC_IMAGE_NAME:ruby_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-complex_proto-$GITHUB_REF_NAME

  bench-ruby_grpc-complex_proto:
    runs-on: ubuntu-latest
    needs: ruby_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag ruby_grpc_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:ruby_grpc_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:ruby_grpc_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:ruby_grpc_bench-complex_proto
    - name: Benchmark ruby_grpc_bench
      run: ./bench.sh ruby_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-complex_proto

  ruby_grpc-string_100B:
    runs-on: ubuntu-latest
    needs: ruby_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build ruby_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh ruby_grpc_bench
    - name: Push tag ruby_grpc_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:ruby_grpc_bench-string_100B $GRPC_IMAGE_NAME:ruby_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:ruby_grpc_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:ruby_grpc_bench-string_100B
    - name: Benchmark ruby_grpc_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh ruby_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-string_100B

  ruby_grpc-string_10B:
    runs-on: ubuntu-latest
    needs: ruby_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build ruby_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh ruby_grpc_bench
    - name: Push tag ruby_grpc_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10B $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10B
    - name: Benchmark ruby_grpc_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh ruby_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10B

  ruby_grpc-string_10kB:
    runs-on: ubuntu-latest
    needs: ruby_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build ruby_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh ruby_grpc_bench
    - name: Push tag ruby_grpc_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10kB $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10kB
    - name: Benchmark ruby_grpc_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh ruby_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-string_10kB

  ruby_grpc-string_1kB:
    runs-on: ubuntu-latest
    needs: ruby_grpc-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build ruby_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh ruby_grpc_bench
    - name: Push tag ruby_grpc_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:ruby_grpc_bench-string_1kB $GRPC_IMAGE_NAME:ruby_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:ruby_grpc_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:ruby_grpc_bench-string_1kB
    - name: Benchmark ruby_grpc_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh ruby_grpc_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-string_1kB

  rust_grpcio-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_grpcio_bench
      run: ./build.sh rust_grpcio_bench
    - name: Push tag rust_grpcio_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_grpcio_bench-complex_proto $GRPC_IMAGE_NAME:rust_grpcio_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-complex_proto-$GITHUB_REF_NAME

  bench-rust_grpcio-complex_proto:
    runs-on: ubuntu-latest
    needs: rust_grpcio-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag rust_grpcio_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:rust_grpcio_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_grpcio_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_grpcio_bench-complex_proto
    - name: Benchmark rust_grpcio_bench
      run: ./bench.sh rust_grpcio_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-complex_proto

  rust_grpcio-string_100B:
    runs-on: ubuntu-latest
    needs: rust_grpcio-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_grpcio_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh rust_grpcio_bench
    - name: Push tag rust_grpcio_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_grpcio_bench-string_100B $GRPC_IMAGE_NAME:rust_grpcio_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_grpcio_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_grpcio_bench-string_100B
    - name: Benchmark rust_grpcio_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh rust_grpcio_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-string_100B

  rust_grpcio-string_10B:
    runs-on: ubuntu-latest
    needs: rust_grpcio-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_grpcio_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh rust_grpcio_bench
    - name: Push tag rust_grpcio_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10B $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10B
    - name: Benchmark rust_grpcio_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh rust_grpcio_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10B

  rust_grpcio-string_10kB:
    runs-on: ubuntu-latest
    needs: rust_grpcio-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_grpcio_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh rust_grpcio_bench
    - name: Push tag rust_grpcio_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10kB $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10kB
    - name: Benchmark rust_grpcio_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh rust_grpcio_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-string_10kB

  rust_grpcio-string_1kB:
    runs-on: ubuntu-latest
    needs: rust_grpcio-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_grpcio_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh rust_grpcio_bench
    - name: Push tag rust_grpcio_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_grpcio_bench-string_1kB $GRPC_IMAGE_NAME:rust_grpcio_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_grpcio_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_grpcio_bench-string_1kB
    - name: Benchmark rust_grpcio_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh rust_grpcio_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-string_1kB

  rust_thruster_mt-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_thruster_mt_bench
      run: ./build.sh rust_thruster_mt_bench
    - name: Push tag rust_thruster_mt_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_mt_bench-complex_proto $GRPC_IMAGE_NAME:rust_thruster_mt_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-complex_proto-$GITHUB_REF_NAME

  bench-rust_thruster_mt-complex_proto:
    runs-on: ubuntu-latest
    needs: rust_thruster_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag rust_thruster_mt_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:rust_thruster_mt_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_mt_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_thruster_mt_bench-complex_proto
    - name: Benchmark rust_thruster_mt_bench
      run: ./bench.sh rust_thruster_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-complex_proto

  rust_thruster_mt-string_100B:
    runs-on: ubuntu-latest
    needs: rust_thruster_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_thruster_mt_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh rust_thruster_mt_bench
    - name: Push tag rust_thruster_mt_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_100B $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_100B
    - name: Benchmark rust_thruster_mt_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh rust_thruster_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_100B

  rust_thruster_mt-string_10B:
    runs-on: ubuntu-latest
    needs: rust_thruster_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_thruster_mt_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh rust_thruster_mt_bench
    - name: Push tag rust_thruster_mt_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10B $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10B
    - name: Benchmark rust_thruster_mt_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh rust_thruster_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10B

  rust_thruster_mt-string_10kB:
    runs-on: ubuntu-latest
    needs: rust_thruster_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_thruster_mt_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh rust_thruster_mt_bench
    - name: Push tag rust_thruster_mt_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10kB $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10kB
    - name: Benchmark rust_thruster_mt_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh rust_thruster_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_10kB

  rust_thruster_mt-string_1kB:
    runs-on: ubuntu-latest
    needs: rust_thruster_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_thruster_mt_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh rust_thruster_mt_bench
    - name: Push tag rust_thruster_mt_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_1kB $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_1kB
    - name: Benchmark rust_thruster_mt_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh rust_thruster_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-string_1kB

  rust_thruster_st-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_thruster_st_bench
      run: ./build.sh rust_thruster_st_bench
    - name: Push tag rust_thruster_st_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_st_bench-complex_proto $GRPC_IMAGE_NAME:rust_thruster_st_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-complex_proto-$GITHUB_REF_NAME

  bench-rust_thruster_st-complex_proto:
    runs-on: ubuntu-latest
    needs: rust_thruster_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag rust_thruster_st_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:rust_thruster_st_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_st_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_thruster_st_bench-complex_proto
    - name: Benchmark rust_thruster_st_bench
      run: ./bench.sh rust_thruster_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-complex_proto

  rust_thruster_st-string_100B:
    runs-on: ubuntu-latest
    needs: rust_thruster_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_thruster_st_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh rust_thruster_st_bench
    - name: Push tag rust_thruster_st_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_100B $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_100B
    - name: Benchmark rust_thruster_st_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh rust_thruster_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_100B

  rust_thruster_st-string_10B:
    runs-on: ubuntu-latest
    needs: rust_thruster_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_thruster_st_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh rust_thruster_st_bench
    - name: Push tag rust_thruster_st_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10B $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10B
    - name: Benchmark rust_thruster_st_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh rust_thruster_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10B

  rust_thruster_st-string_10kB:
    runs-on: ubuntu-latest
    needs: rust_thruster_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_thruster_st_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh rust_thruster_st_bench
    - name: Push tag rust_thruster_st_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10kB $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10kB
    - name: Benchmark rust_thruster_st_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh rust_thruster_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_10kB

  rust_thruster_st-string_1kB:
    runs-on: ubuntu-latest
    needs: rust_thruster_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_thruster_st_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh rust_thruster_st_bench
    - name: Push tag rust_thruster_st_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_1kB $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_1kB
    - name: Benchmark rust_thruster_st_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh rust_thruster_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-string_1kB

  rust_tonic_mt-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_tonic_mt_bench
      run: ./build.sh rust_tonic_mt_bench
    - name: Push tag rust_tonic_mt_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_mt_bench-complex_proto $GRPC_IMAGE_NAME:rust_tonic_mt_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-complex_proto-$GITHUB_REF_NAME

  bench-rust_tonic_mt-complex_proto:
    runs-on: ubuntu-latest
    needs: rust_tonic_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag rust_tonic_mt_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:rust_tonic_mt_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_mt_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_tonic_mt_bench-complex_proto
    - name: Benchmark rust_tonic_mt_bench
      run: ./bench.sh rust_tonic_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-complex_proto

  rust_tonic_mt-string_100B:
    runs-on: ubuntu-latest
    needs: rust_tonic_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_tonic_mt_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh rust_tonic_mt_bench
    - name: Push tag rust_tonic_mt_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_100B $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_100B
    - name: Benchmark rust_tonic_mt_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh rust_tonic_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_100B

  rust_tonic_mt-string_10B:
    runs-on: ubuntu-latest
    needs: rust_tonic_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_tonic_mt_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh rust_tonic_mt_bench
    - name: Push tag rust_tonic_mt_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10B $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10B
    - name: Benchmark rust_tonic_mt_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh rust_tonic_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10B

  rust_tonic_mt-string_10kB:
    runs-on: ubuntu-latest
    needs: rust_tonic_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_tonic_mt_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh rust_tonic_mt_bench
    - name: Push tag rust_tonic_mt_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10kB $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10kB
    - name: Benchmark rust_tonic_mt_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh rust_tonic_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_10kB

  rust_tonic_mt-string_1kB:
    runs-on: ubuntu-latest
    needs: rust_tonic_mt-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_tonic_mt_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh rust_tonic_mt_bench
    - name: Push tag rust_tonic_mt_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_1kB $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_1kB
    - name: Benchmark rust_tonic_mt_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh rust_tonic_mt_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-string_1kB

  rust_tonic_st-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_tonic_st_bench
      run: ./build.sh rust_tonic_st_bench
    - name: Push tag rust_tonic_st_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_st_bench-complex_proto $GRPC_IMAGE_NAME:rust_tonic_st_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-complex_proto-$GITHUB_REF_NAME

  bench-rust_tonic_st-complex_proto:
    runs-on: ubuntu-latest
    needs: rust_tonic_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag rust_tonic_st_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:rust_tonic_st_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_st_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_tonic_st_bench-complex_proto
    - name: Benchmark rust_tonic_st_bench
      run: ./bench.sh rust_tonic_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-complex_proto

  rust_tonic_st-string_100B:
    runs-on: ubuntu-latest
    needs: rust_tonic_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_tonic_st_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh rust_tonic_st_bench
    - name: Push tag rust_tonic_st_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_100B $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_100B
    - name: Benchmark rust_tonic_st_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh rust_tonic_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_100B

  rust_tonic_st-string_10B:
    runs-on: ubuntu-latest
    needs: rust_tonic_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_tonic_st_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh rust_tonic_st_bench
    - name: Push tag rust_tonic_st_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10B $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10B
    - name: Benchmark rust_tonic_st_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh rust_tonic_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10B

  rust_tonic_st-string_10kB:
    runs-on: ubuntu-latest
    needs: rust_tonic_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_tonic_st_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh rust_tonic_st_bench
    - name: Push tag rust_tonic_st_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10kB $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10kB
    - name: Benchmark rust_tonic_st_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh rust_tonic_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_10kB

  rust_tonic_st-string_1kB:
    runs-on: ubuntu-latest
    needs: rust_tonic_st-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build rust_tonic_st_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh rust_tonic_st_bench
    - name: Push tag rust_tonic_st_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_1kB $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_1kB
    - name: Benchmark rust_tonic_st_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh rust_tonic_st_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-string_1kB

  scala_akka-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_akka_bench
      run: ./build.sh scala_akka_bench
    - name: Push tag scala_akka_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_akka_bench-complex_proto $GRPC_IMAGE_NAME:scala_akka_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_akka_bench-complex_proto-$GITHUB_REF_NAME

  bench-scala_akka-complex_proto:
    runs-on: ubuntu-latest
    needs: scala_akka-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag scala_akka_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:scala_akka_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_akka_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_akka_bench-complex_proto
    - name: Benchmark scala_akka_bench
      run: ./bench.sh scala_akka_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_akka_bench-complex_proto

  scala_akka-string_100B:
    runs-on: ubuntu-latest
    needs: scala_akka-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_akka_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh scala_akka_bench
    - name: Push tag scala_akka_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_akka_bench-string_100B $GRPC_IMAGE_NAME:scala_akka_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_akka_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_akka_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_akka_bench-string_100B
    - name: Benchmark scala_akka_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh scala_akka_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_akka_bench-string_100B

  scala_akka-string_10B:
    runs-on: ubuntu-latest
    needs: scala_akka-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_akka_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh scala_akka_bench
    - name: Push tag scala_akka_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_akka_bench-string_10B $GRPC_IMAGE_NAME:scala_akka_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_akka_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_akka_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_akka_bench-string_10B
    - name: Benchmark scala_akka_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh scala_akka_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_akka_bench-string_10B

  scala_akka-string_10kB:
    runs-on: ubuntu-latest
    needs: scala_akka-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_akka_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh scala_akka_bench
    - name: Push tag scala_akka_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_akka_bench-string_10kB $GRPC_IMAGE_NAME:scala_akka_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_akka_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_akka_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_akka_bench-string_10kB
    - name: Benchmark scala_akka_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh scala_akka_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_akka_bench-string_10kB

  scala_akka-string_1kB:
    runs-on: ubuntu-latest
    needs: scala_akka-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_akka_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh scala_akka_bench
    - name: Push tag scala_akka_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_akka_bench-string_1kB $GRPC_IMAGE_NAME:scala_akka_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_akka_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_akka_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_akka_bench-string_1kB
    - name: Benchmark scala_akka_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh scala_akka_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_akka_bench-string_1kB

  scala_fs2-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_fs2_bench
      run: ./build.sh scala_fs2_bench
    - name: Push tag scala_fs2_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_fs2_bench-complex_proto $GRPC_IMAGE_NAME:scala_fs2_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_fs2_bench-complex_proto-$GITHUB_REF_NAME

  bench-scala_fs2-complex_proto:
    runs-on: ubuntu-latest
    needs: scala_fs2-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag scala_fs2_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:scala_fs2_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_fs2_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_fs2_bench-complex_proto
    - name: Benchmark scala_fs2_bench
      run: ./bench.sh scala_fs2_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_fs2_bench-complex_proto

  scala_fs2-string_100B:
    runs-on: ubuntu-latest
    needs: scala_fs2-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_fs2_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh scala_fs2_bench
    - name: Push tag scala_fs2_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_fs2_bench-string_100B $GRPC_IMAGE_NAME:scala_fs2_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_fs2_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_fs2_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_fs2_bench-string_100B
    - name: Benchmark scala_fs2_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh scala_fs2_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_fs2_bench-string_100B

  scala_fs2-string_10B:
    runs-on: ubuntu-latest
    needs: scala_fs2-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_fs2_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh scala_fs2_bench
    - name: Push tag scala_fs2_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_fs2_bench-string_10B $GRPC_IMAGE_NAME:scala_fs2_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_fs2_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_fs2_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_fs2_bench-string_10B
    - name: Benchmark scala_fs2_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh scala_fs2_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_fs2_bench-string_10B

  scala_fs2-string_10kB:
    runs-on: ubuntu-latest
    needs: scala_fs2-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_fs2_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh scala_fs2_bench
    - name: Push tag scala_fs2_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_fs2_bench-string_10kB $GRPC_IMAGE_NAME:scala_fs2_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_fs2_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_fs2_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_fs2_bench-string_10kB
    - name: Benchmark scala_fs2_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh scala_fs2_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_fs2_bench-string_10kB

  scala_fs2-string_1kB:
    runs-on: ubuntu-latest
    needs: scala_fs2-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_fs2_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh scala_fs2_bench
    - name: Push tag scala_fs2_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_fs2_bench-string_1kB $GRPC_IMAGE_NAME:scala_fs2_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_fs2_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_fs2_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_fs2_bench-string_1kB
    - name: Benchmark scala_fs2_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh scala_fs2_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_fs2_bench-string_1kB

  scala_zio-complex_proto:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_zio_bench
      run: ./build.sh scala_zio_bench
    - name: Push tag scala_zio_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_zio_bench-complex_proto $GRPC_IMAGE_NAME:scala_zio_bench-complex_proto-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_zio_bench-complex_proto-$GITHUB_REF_NAME

  bench-scala_zio-complex_proto:
    runs-on: ubuntu-latest
    needs: scala_zio-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Retrieve tag scala_zio_bench-complex_proto-$GITHUB_REF_NAME
      run: |
        docker pull $GRPC_IMAGE_NAME:scala_zio_bench-complex_proto-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_zio_bench-complex_proto-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_zio_bench-complex_proto
    - name: Benchmark scala_zio_bench
      run: ./bench.sh scala_zio_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_zio_bench-complex_proto

  scala_zio-string_100B:
    runs-on: ubuntu-latest
    needs: scala_zio-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_zio_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./build.sh scala_zio_bench
    - name: Push tag scala_zio_bench-string_100B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_zio_bench-string_100B $GRPC_IMAGE_NAME:scala_zio_bench-string_100B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_zio_bench-string_100B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_zio_bench-string_100B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_zio_bench-string_100B
    - name: Benchmark scala_zio_bench with string_100B
      run: GRPC_REQUEST_SCENARIO=string_100B ./bench.sh scala_zio_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_zio_bench-string_100B

  scala_zio-string_10B:
    runs-on: ubuntu-latest
    needs: scala_zio-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_zio_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./build.sh scala_zio_bench
    - name: Push tag scala_zio_bench-string_10B-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_zio_bench-string_10B $GRPC_IMAGE_NAME:scala_zio_bench-string_10B-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_zio_bench-string_10B-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_zio_bench-string_10B-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_zio_bench-string_10B
    - name: Benchmark scala_zio_bench with string_10B
      run: GRPC_REQUEST_SCENARIO=string_10B ./bench.sh scala_zio_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_zio_bench-string_10B

  scala_zio-string_10kB:
    runs-on: ubuntu-latest
    needs: scala_zio-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_zio_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./build.sh scala_zio_bench
    - name: Push tag scala_zio_bench-string_10kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_zio_bench-string_10kB $GRPC_IMAGE_NAME:scala_zio_bench-string_10kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_zio_bench-string_10kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_zio_bench-string_10kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_zio_bench-string_10kB
    - name: Benchmark scala_zio_bench with string_10kB
      run: GRPC_REQUEST_SCENARIO=string_10kB ./bench.sh scala_zio_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_zio_bench-string_10kB

  scala_zio-string_1kB:
    runs-on: ubuntu-latest
    needs: scala_zio-complex_proto
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build scala_zio_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./build.sh scala_zio_bench
    - name: Push tag scala_zio_bench-string_1kB-$GITHUB_REF_NAME
      run: |
        docker tag  $GRPC_IMAGE_NAME:scala_zio_bench-string_1kB $GRPC_IMAGE_NAME:scala_zio_bench-string_1kB-$GITHUB_REF_NAME
        docker push $GRPC_IMAGE_NAME:scala_zio_bench-string_1kB-$GITHUB_REF_NAME
        docker tag  $GRPC_IMAGE_NAME:scala_zio_bench-string_1kB-$GITHUB_REF_NAME $GRPC_IMAGE_NAME:scala_zio_bench-string_1kB
    - name: Benchmark scala_zio_bench with string_1kB
      run: GRPC_REQUEST_SCENARIO=string_1kB ./bench.sh scala_zio_bench
    - name: If on master push naked image as well
      if: ${{ github.ref == 'refs/heads/master' }}
      run: docker push $GRPC_IMAGE_NAME:scala_zio_bench-string_1kB

