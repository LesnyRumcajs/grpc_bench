name: "B&B scenario: complex_proto"

on:
  push:
  pull_request:

env:
  GRPC_REQUEST_SCENARIO: complex_proto

jobs:
  meta-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: ./generate_ci.sh | tee .github/workflows/build.yml
    - run: git --no-pager diff --exit-code

  cpp_asio_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build cpp_asio_grpc_bench
      run: ./build.sh cpp_asio_grpc_bench

    - name: Benchmark cpp_asio_grpc_bench
      run: ./bench.sh cpp_asio_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:cpp_asio_grpc_bench-complex_proto

  cpp_grpc_mt_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build cpp_grpc_mt_bench
      run: ./build.sh cpp_grpc_mt_bench

    - name: Benchmark cpp_grpc_mt_bench
      run: ./bench.sh cpp_grpc_mt_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_mt_bench-complex_proto

  cpp_grpc_st_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build cpp_grpc_st_bench
      run: ./build.sh cpp_grpc_st_bench

    - name: Benchmark cpp_grpc_st_bench
      run: ./bench.sh cpp_grpc_st_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:cpp_grpc_st_bench-complex_proto

  crystal_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build crystal_grpc_bench
      run: ./build.sh crystal_grpc_bench

    - name: Benchmark crystal_grpc_bench
      run: ./bench.sh crystal_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:crystal_grpc_bench-complex_proto

  csharp_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build csharp_grpc_bench
      run: ./build.sh csharp_grpc_bench

    - name: Benchmark csharp_grpc_bench
      run: ./bench.sh csharp_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:csharp_grpc_bench-complex_proto

  dotnet_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build dotnet_grpc_bench
      run: ./build.sh dotnet_grpc_bench

    - name: Benchmark dotnet_grpc_bench
      run: ./bench.sh dotnet_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:dotnet_grpc_bench-complex_proto

  elixir_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build elixir_grpc_bench
      run: ./build.sh elixir_grpc_bench

    - name: Benchmark elixir_grpc_bench
      run: ./bench.sh elixir_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:elixir_grpc_bench-complex_proto

  erlang_grpcbox_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build erlang_grpcbox_bench
      run: ./build.sh erlang_grpcbox_bench

    - name: Benchmark erlang_grpcbox_bench
      run: ./bench.sh erlang_grpcbox_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:erlang_grpcbox_bench-complex_proto

  go_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build go_grpc_bench
      run: ./build.sh go_grpc_bench

    - name: Benchmark go_grpc_bench
      run: ./bench.sh go_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:go_grpc_bench-complex_proto

  go_vtgrpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build go_vtgrpc_bench
      run: ./build.sh go_vtgrpc_bench

    - name: Benchmark go_vtgrpc_bench
      run: ./bench.sh go_vtgrpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:go_vtgrpc_bench-complex_proto

  java_aot_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_aot_bench
      run: ./build.sh java_aot_bench

    - name: Benchmark java_aot_bench
      run: ./bench.sh java_aot_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_aot_bench-complex_proto

  java_hotspot_grpc_g1gc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_hotspot_grpc_g1gc_bench
      run: ./build.sh java_hotspot_grpc_g1gc_bench

    - name: Benchmark java_hotspot_grpc_g1gc_bench
      run: ./bench.sh java_hotspot_grpc_g1gc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_g1gc_bench-complex_proto

  java_hotspot_grpc_pgc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_hotspot_grpc_pgc_bench
      run: ./build.sh java_hotspot_grpc_pgc_bench

    - name: Benchmark java_hotspot_grpc_pgc_bench
      run: ./bench.sh java_hotspot_grpc_pgc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_pgc_bench-complex_proto

  java_hotspot_grpc_sgc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_hotspot_grpc_sgc_bench
      run: ./build.sh java_hotspot_grpc_sgc_bench

    - name: Benchmark java_hotspot_grpc_sgc_bench
      run: ./bench.sh java_hotspot_grpc_sgc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_sgc_bench-complex_proto

  java_hotspot_grpc_she_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_hotspot_grpc_she_bench
      run: ./build.sh java_hotspot_grpc_she_bench

    - name: Benchmark java_hotspot_grpc_she_bench
      run: ./bench.sh java_hotspot_grpc_she_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_she_bench-complex_proto

  java_hotspot_grpc_zgc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_hotspot_grpc_zgc_bench
      run: ./build.sh java_hotspot_grpc_zgc_bench

    - name: Benchmark java_hotspot_grpc_zgc_bench
      run: ./bench.sh java_hotspot_grpc_zgc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_hotspot_grpc_zgc_bench-complex_proto

  java_micronaut_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_micronaut_bench
      run: ./build.sh java_micronaut_bench

    - name: Benchmark java_micronaut_bench
      run: ./bench.sh java_micronaut_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_bench-complex_proto

  java_micronaut_workstealing_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_micronaut_workstealing_bench
      run: ./build.sh java_micronaut_workstealing_bench

    - name: Benchmark java_micronaut_workstealing_bench
      run: ./bench.sh java_micronaut_workstealing_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_micronaut_workstealing_bench-complex_proto

  java_openj9_grpc_gencon_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_openj9_grpc_gencon_bench
      run: ./build.sh java_openj9_grpc_gencon_bench

    - name: Benchmark java_openj9_grpc_gencon_bench
      run: ./bench.sh java_openj9_grpc_gencon_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_openj9_grpc_gencon_bench-complex_proto

  java_quarkus_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_quarkus_bench
      run: ./build.sh java_quarkus_bench

    - name: Benchmark java_quarkus_bench
      run: ./bench.sh java_quarkus_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_quarkus_bench-complex_proto

  java_quarkus_native_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build java_quarkus_native_bench
      run: ./build.sh java_quarkus_native_bench

    - name: Benchmark java_quarkus_native_bench
      run: ./bench.sh java_quarkus_native_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:java_quarkus_native_bench-complex_proto

  kotlin_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build kotlin_grpc_bench
      run: ./build.sh kotlin_grpc_bench

    - name: Benchmark kotlin_grpc_bench
      run: ./bench.sh kotlin_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:kotlin_grpc_bench-complex_proto

  node_grpcjs_st_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build node_grpcjs_st_bench
      run: ./build.sh node_grpcjs_st_bench

    - name: Benchmark node_grpcjs_st_bench
      run: ./bench.sh node_grpcjs_st_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:node_grpcjs_st_bench-complex_proto

  php_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build php_grpc_bench
      run: ./build.sh php_grpc_bench

    - name: Benchmark php_grpc_bench
      run: ./bench.sh php_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:php_grpc_bench-complex_proto

  python_async_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build python_async_grpc_bench
      run: ./build.sh python_async_grpc_bench

    - name: Benchmark python_async_grpc_bench
      run: ./bench.sh python_async_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:python_async_grpc_bench-complex_proto

  python_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build python_grpc_bench
      run: ./build.sh python_grpc_bench

    - name: Benchmark python_grpc_bench
      run: ./bench.sh python_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:python_grpc_bench-complex_proto

  ruby_grpc_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build ruby_grpc_bench
      run: ./build.sh ruby_grpc_bench

    - name: Benchmark ruby_grpc_bench
      run: ./bench.sh ruby_grpc_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:ruby_grpc_bench-complex_proto

  rust_grpcio_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build rust_grpcio_bench
      run: ./build.sh rust_grpcio_bench

    - name: Benchmark rust_grpcio_bench
      run: ./bench.sh rust_grpcio_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:rust_grpcio_bench-complex_proto

  rust_thruster_mt_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build rust_thruster_mt_bench
      run: ./build.sh rust_thruster_mt_bench

    - name: Benchmark rust_thruster_mt_bench
      run: ./bench.sh rust_thruster_mt_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_mt_bench-complex_proto

  rust_thruster_st_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build rust_thruster_st_bench
      run: ./build.sh rust_thruster_st_bench

    - name: Benchmark rust_thruster_st_bench
      run: ./bench.sh rust_thruster_st_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:rust_thruster_st_bench-complex_proto

  rust_tonic_mt_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build rust_tonic_mt_bench
      run: ./build.sh rust_tonic_mt_bench

    - name: Benchmark rust_tonic_mt_bench
      run: ./bench.sh rust_tonic_mt_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_mt_bench-complex_proto

  rust_tonic_st_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build rust_tonic_st_bench
      run: ./build.sh rust_tonic_st_bench

    - name: Benchmark rust_tonic_st_bench
      run: ./bench.sh rust_tonic_st_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:rust_tonic_st_bench-complex_proto

  scala_akka_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build scala_akka_bench
      run: ./build.sh scala_akka_bench

    - name: Benchmark scala_akka_bench
      run: ./bench.sh scala_akka_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:scala_akka_bench-complex_proto

  scala_fs2_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build scala_fs2_bench
      run: ./build.sh scala_fs2_bench

    - name: Benchmark scala_fs2_bench
      run: ./bench.sh scala_fs2_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:scala_fs2_bench-complex_proto

  scala_zio_bench:
    runs-on: ubuntu-latest
    needs: meta-check
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set GRPC_IMAGE_NAME
      run: |
        SLUG=${SLUG,,} # Lowercase
        echo "GRPC_IMAGE_NAME=ghcr.io/$SLUG" >>$GITHUB_ENV
      env:
        SLUG: ${{ github.repository }}

    - name: Build scala_zio_bench
      run: ./build.sh scala_zio_bench

    - name: Benchmark scala_zio_bench
      run: ./bench.sh scala_zio_bench
      env:
        GRPC_BENCHMARK_DURATION: 30s

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - if: ${{ github.ref == 'refs/heads/master' }}
      name: If on master push image to GHCR
      run: docker push $GRPC_IMAGE_NAME:scala_zio_bench-complex_proto

